name: 'CI: NodeJS'

on:
  push:
    paths:
    - '.github/workflows/default.yml'
    - 'tests/**'
    - 'types/**'
    - 'src/**'
    - 'biome.jsonc'
    - 'package.json'
    - 'pnpm-lock.yaml'
    - 'tsdown.config.ts'
  pull_request:
      paths:
      - '.github/workflows/default.yml'
      - 'tests/**'
      - 'types/**'
      - 'src/**'
      - 'biome.jsonc'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'tsdown.config.ts'
  workflow_dispatch:

jobs:
  default:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ['lts/*', 'latest']

    steps:
    - name: Installing cksfv
      run: |
        sudo apt-get -y update
        sudo apt-get -y install cksfv

    - uses: actions/checkout@v5
      with:
        fetch-depth: 10

    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Enable Corepack
      run: corepack enable

    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_store_path::$(pnpm store path)"

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_store_path }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile --strict-peer-dependencies

    - name: Lint Source
      run: pnpm exec biome ci

    - name: Build Source
      run: pnpm run --if-present build

    - name: Run Tests
      run: pnpm run --if-present test
